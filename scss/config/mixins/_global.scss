@mixin map-styles($styles) {
  @each $style, $value in $styles {
    #{$style}: #{$value};
  }
}

@mixin pseudo($loc: before) {
  @if $loc == before {
    &::before {
      content: "";
      display: block;
      @content;
    }
  }

  @if $loc == after {
    &::after {
      content: "";
      display: block;
      @content;
    }
  }
}

@mixin clickable-block($pos: after) {
  position: relative;

  a {
    @include pseudo($pos) {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}

@mixin list-style-reset() {
  margin: 0;
  padding: 0;

  li {
    list-style: none;
  }
}

//
// Allows the same styles to be applied to multiple selectors without
// comma-separating them. Useful for proprietary/non-widely-supported selectors
// which can't be comma-separated.
//
@mixin multiple-selectors($selectors...) {
  @each $selector in $selectors {
    #{$selector} {
      @content;
    }
  }
}

//
// Hides browser scrollbar
// [1] - required for Safari on iOS devices
//
@mixin hide-scrollbar($type: "", $padding: 30px) {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */

  &::-webkit-scrollbar {
    display: none;
  }

  // [1]
  @if $type == "horizontal" {
    padding-bottom: $padding;
    clip-path: inset(0 0 $padding 0);
  }

  // [1]
  @else if $type == "vertical" {
    padding-right: $padding;
    clip-path: inset(0 $padding 0 0);
  }
}

//
// Adds hover state only to devices that support it (not phones)
// Taken from: https://ferie.medium.com/detect-a-touch-device-with-only-css-9f8e30fa1134
//
@mixin hover() {
  /* one or more available input mechanism(s) can hover over elements with ease */
  @media screen and (any-hover: hover) {
    &:hover {
      @content;
    }
  }
}

//
// Transition for multiple properties
//
@mixin transition($properties, $transition-time: $a-short, $transition-function: "linear") {
  @if $properties == "all" {
    @error "Please specify animation properties individually.";
  }

  transition: $properties;
  transition-duration: $transition-time;
  transition-timing-function: $transition-function;
}

//
// Forces image inside a container to be constrained by a custom aspect ratio,
// defined by percentage.
// i.e. 56.25% equals to 16/9
//
@mixin image-force-aspect-ratio($percentage: 56.25%) {
  position: relative;
  pointer-events: none;
  overflow: hidden;
  padding-bottom: $percentage;

  img {
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
